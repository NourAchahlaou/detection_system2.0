upstream user_management {
    server user_management:8000;
}


upstream airbus_ui {
    server airbus_ui:3000;
}

upstream camera_management {
    # Using host.docker.internal which resolves to the Windows host from Docker
    server host.docker.internal:8001;
}


server {
    listen 80;
    server_name localhost;

    # User Management Service Routes
    location /api/users/ {
        proxy_pass http://user_management/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/cameras/ {
        proxy_pass http://camera_management/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    #Frontend Application
    location / {
        proxy_pass http://airbus_ui;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for React development
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }


}