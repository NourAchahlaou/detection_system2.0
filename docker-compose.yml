version: "3.9"

services:
  user_management:
    container_name: userManagementMicroservice
    build:
      context: ./backend/user_management
    env_file:
      - ./.env
    ports:
      - "8001:8000"
    depends_on:
      databasePostgres:
        condition: service_healthy
    networks:
      - airvision-net
    volumes:
      - ./backend/user_management:/usr/srv/user_management
      - ./.env:/usr/srv/.env

  # Core service - runs migrations first
  artifact_keeper:
    container_name: artifact_keeper
    build:
      context: ./backend/artifact_keeper
    env_file:
      - ./.env
    ports:
      - "8002:8000"
    depends_on:
      databasePostgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - airvision-net
    volumes:
      - ./backend/artifact_keeper:/usr/srv/artifact_keeper
      - ./.env:/usr/srv/.env
      - dataset:/app/shared/dataset
    user: "1001:1001"
    # Removed healthcheck section - validation now done in entrypoint

  # Dependent service - waits for artifact_keeper to start
  annotation:
    container_name: annotationMicroservice
    build:
      context: ./backend/annotation
    env_file:
      - ./.env
    ports:
      - "8004:8000"
    depends_on:
      databasePostgres:
        condition: service_healthy
      artifact_keeper:
        condition: service_started  # Changed from service_healthy to service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - airvision-net
    volumes:
      - ./backend/annotation:/usr/srv/annotation
      - ./.env:/usr/srv/.env
    user: "1001:1001"

  databasePostgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airbususer -d airvisiondb"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    networks:
      - airvision-net
    ports:
      - "5433:5432"

  airbus_ui:
    build:
      context: ./airbus_ui
      dockerfile: Dockerfile
    container_name: airbus_ui
    ports:
      - "3000:3000"
    depends_on:
      - user_management
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - airvision-net
    volumes:
      - ./airbus_ui:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=3000

  nginx:
    image: nginx:latest
    container_name: nginx_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - user_management
      - artifact_keeper
      - airbus_ui
    networks:
      - airvision-net

networks:
  airvision-net:

volumes:
  user_postgres_data:
  dataset: