version: "3.9"

services:
  user_management:
    container_name: userManagementMicroservice
    build:
      context: ./backend/user_management
    env_file:
      - ./.env
    ports:
      - "8001:8000"
    depends_on:
      - databasePostgres
    networks:
      - airvision-net
    volumes:
      - ./backend/user_management:/usr/srv/user_management
      - ./.env:/usr/srv/.env

  databasePostgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airbususer -d airvisiondb"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    networks:
      - airvision-net
    ports:
      - "5433:5432"

  airbus_ui:
    build:
      context: ./airbus_ui  # Adjusted to point to frontend directory
      dockerfile: Dockerfile
    container_name: airbus_ui
    ports:
      - "3000:3000"  # Changed to default React dev port
    depends_on:
      - user_management
    networks:
      - airvision-net
    volumes:
      - ./airbus_ui:/app  # Mount source code for hot reloading
      - /app/node_modules  # Keep node_modules in container to avoid host conflicts
    environment:
      - CHOKIDAR_USEPOLLING=true  # Helps with file watching in Docker
      - WDS_SOCKET_PORT=3000  # WebSocket port for hot reload


networks:
  airvision-net:

volumes:
  user_postgres_data:
  defect_postgres_data: